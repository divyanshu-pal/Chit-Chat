{"ast":null,"code":"var _jsxFileName = \"G:\\\\Project\\\\chatt\\\\chatme\\\\src\\\\components\\\\SetAvatar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Buffer } from \"buffer\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { setAvatarRoute } from \"../utils/APIRouts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SetAvatar() {\n  _s();\n  const toastOptions = {\n    position: \"bottom-right\",\n    autoClose: 8000,\n    pauseOnHover: true,\n    draggable: true,\n    theme: \"dark\"\n  };\n  const navigate = useNavigate();\n  const api = `https://api.multiavatar.com/4645646`;\n  const [avatar, setAvatar] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedAvatar, setSelectedAvatar] = useState(undefined);\n  useEffect(() => {\n    if (!localStorage.getItem(\"chat-app-user\")) navigate(\"/login\");\n  }, [navigate]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = [];\n      for (let x = 0; x < 4; x++) {\n        const image = await axios.get(`${api}/${Math.round(Math.random() * 1000)}`);\n        const buffer = Buffer.from(image.data); // Changed to Buffer.from\n        data.push(buffer.toString(\"base64\"));\n      }\n      setAvatar(data);\n      setLoading(false);\n    };\n    fetchData();\n  }, []);\n  const setProfilePicture = async () => {\n    if (selectedAvatar === undefined) {\n      toast.error(\"Please select an avatar\");\n    } else {\n      console.log(\"d\");\n      const userdata = localStorage.getItem(\"chat-app-user\");\n      console.log(userdata);\n      const user = JSON.parse(userdata);\n      const {\n        data\n      } = await axios.post(`${setAvatarRoute}/${user._id}`, {\n        image: avatar[selectedAvatar]\n      });\n      if (data.isSet) {\n        user.isAvatarImageSet = true;\n        user.avatarImage = data.image;\n        localStorage.setItem(\"chat-app-user\", JSON.stringify(user));\n        navigate(\"/\");\n      } else {\n        toast.error(\"Error setting avatar. Please try again.\", toastOptions);\n      }\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 23\n  }, this); // Handle loading state\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col justify-center items-center min-h-screen bg-orange-800\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" mt-4\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold text-white\",\n        children: \"Pick an Avatar as your profile picture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap justify-center items-center\",\n      children: avatar.map((avatar, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `w-48 h-48 p-5 ${selectedAvatar === index ? \"border-4 border-blue-500\" : \"\"}`,\n        onClick: () => setSelectedAvatar(index),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `data:image/svg+xml;base64,${avatar}`,\n          alt: `Avatar ${index}`,\n          className: \"max-w-full max-h-full\" // Ensure image fits within the container\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-2 rounded-md text-white bg-black\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: setProfilePicture,\n        children: \"Set as Profile Picture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(SetAvatar, \"ZZ1I3E9kRSFjLk0J8fKLnJnjlbI=\", false, function () {\n  return [useNavigate];\n});\n_c = SetAvatar;\nvar _c;\n$RefreshReg$(_c, \"SetAvatar\");","map":{"version":3,"names":["React","useEffect","useState","axios","Buffer","ToastContainer","toast","useNavigate","setAvatarRoute","jsxDEV","_jsxDEV","SetAvatar","_s","toastOptions","position","autoClose","pauseOnHover","draggable","theme","navigate","api","avatar","setAvatar","loading","setLoading","selectedAvatar","setSelectedAvatar","undefined","localStorage","getItem","fetchData","data","x","image","get","Math","round","random","buffer","from","push","toString","setProfilePicture","error","console","log","userdata","user","JSON","parse","post","_id","isSet","isAvatarImageSet","avatarImage","setItem","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","index","onClick","src","alt","_c","$RefreshReg$"],"sources":["G:/Project/chatt/chatme/src/components/SetAvatar.js"],"sourcesContent":["\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n import { Buffer } from \"buffer\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { setAvatarRoute } from \"../utils/APIRouts\";\r\n\r\nexport default function SetAvatar() {\r\n  const toastOptions = {\r\n    position: \"bottom-right\",\r\n    autoClose: 8000,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    theme: \"dark\",\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n  const api = `https://api.multiavatar.com/4645646`;\r\n\r\n  const [avatar, setAvatar] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedAvatar, setSelectedAvatar] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    if (!localStorage.getItem(\"chat-app-user\"))\r\n      navigate(\"/login\");\r\n  }, [navigate]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const data = [];\r\n      for (let x = 0; x < 4; x++) {\r\n        const image = await axios.get(`${api}/${Math.round(Math.random() * 1000)}`);\r\n        const buffer = Buffer.from(image.data); // Changed to Buffer.from\r\n        data.push(buffer.toString(\"base64\"));\r\n      }\r\n      setAvatar(data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const setProfilePicture = async () => {\r\n    if (selectedAvatar === undefined) {\r\n      toast.error(\"Please select an avatar\");\r\n    } else {\r\n      console.log(\"d\")\r\n      const userdata= localStorage.getItem(\"chat-app-user\");\r\n      console.log(userdata);\r\n      const user = JSON.parse(userdata);\r\n      \r\n      const { data } = await axios.post(`${setAvatarRoute}/${user._id}`, {\r\n        image: avatar[selectedAvatar],\r\n      });\r\n\r\n      if (data.isSet) {\r\n        user.isAvatarImageSet = true;\r\n        user.avatarImage = data.image;\r\n        localStorage.setItem(\r\n          \"chat-app-user\",\r\n          JSON.stringify(user)\r\n        );\r\n        navigate(\"/\");\r\n      } else {\r\n        toast.error(\"Error setting avatar. Please try again.\", toastOptions);\r\n      }\r\n    }\r\n  };\r\n\r\n  if (loading) return <p>Loading...</p>; // Handle loading state\r\n\r\n  return (\r\n    <div className=\"flex flex-col justify-center items-center min-h-screen bg-orange-800\">\r\n    {/* flex flex-col justify-center items-center min-h-screen bg-orange-800 */}\r\n      <div className=\" mt-4\">\r\n        <h1 className=\"text-2xl font-bold text-white\">Pick an Avatar as your profile picture</h1>\r\n      </div>\r\n\r\n      <div className=\"flex flex-wrap justify-center items-center\">\r\n      {avatar.map((avatar, index) => (\r\n        <div \r\n          key={index}\r\n          className={`w-48 h-48 p-5 ${\r\n            selectedAvatar === index ? \"border-4 border-blue-500\" : \"\"\r\n          }`}\r\n          onClick={() => setSelectedAvatar(index)}\r\n        >\r\n          <img\r\n            src={`data:image/svg+xml;base64,${avatar}`}\r\n            alt={`Avatar ${index}`}\r\n            className=\"max-w-full max-h-full\" // Ensure image fits within the container\r\n          />\r\n        </div>\r\n      ))}\r\n    </div>\r\n\r\n      <div className=\"p-2 rounded-md text-white bg-black\">\r\n      <button onClick={setProfilePicture}>Set as Profile Picture</button>\r\n      </div>\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}